//
//  LHCChatViewController.m
//  Group-Demo-01
//
//  Created by qianfeng on 16/4/5.
//  Copyright © 2016年 qianfeng. All rights reserved.
//

#import "LHCChatViewController.h"
#import "LHCChatTableViewCell.h"
#import "LHCChatTextField.h"
#import "LHCDBManager.h"

/**复用ID*/
#define identifier @"1465457"
/**输入框高度*/
#define TEXT_WIDTH 40

@interface LHCChatViewController () <UITableViewDataSource,UITableViewDelegate>

/**内容展示*/
@property (nonatomic,strong) UITableView *tableView;

/**输入框*/
@property (nonatomic,strong) LHCChatTextField *myTextField;

@end

@implementation LHCChatViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    
    /**从DB中取出接收到的消息*/
    [self.dataSource addObjectsFromArray:[[LHCDBManager defaultDBManager] findMessage:self.friendId]];
    
    [self tableView];
    [self myTextField];
    
}

- (void)viewWillAppear:(BOOL)animated {
    self.tabBarController.tabBar.hidden = YES;
}
- (void)viewWillDisappear:(BOOL)animated {
    self.tabBarController.tabBar.hidden = NO;
}


#pragma mark ------------TableView协议---------------
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    return self.dataSource.count;

}
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    LHCChatTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifier];
    
    cell.textLabel.text = self.dataSource[indexPath.row];
    
    return cell;
}


/**得到在线消息添加到数据源，更新界面*/
- (void)getMessage:(NSString *)txt withFrom:(NSString *)from {
    [self.dataSource addObject:txt];
    [self.tableView reloadData];
}




#pragma mark --------------懒加载-------------
- (UITableView *)tableView {
    if ( _tableView == nil) {
        _tableView = [[UITableView alloc] initWithFrame:self.view.bounds style:UITableViewStylePlain];
        
        /**留出输入框的高度*/
        _tableView.height -= TEXT_WIDTH;
        
        _tableView.delegate = self;
        _tableView.dataSource = self;
        
        _tableView.separatorStyle = UITableViewCellSelectionStyleNone;
        
        [self.view addSubview:_tableView];
    }
    //注册一个cell
    [_tableView registerClass:[LHCChatTableViewCell class] forCellReuseIdentifier:identifier];
    return _tableView;
}

- (LHCChatTextField *)myTextField {
    if (_myTextField == nil) {
        _myTextField = [[LHCChatTextField alloc] initWithFrame:CGRectMake(0, self.tableView.maxY, SCREEN_WIDTH, TEXT_WIDTH)];
        /**发送事件*/
        [self sendAction];
        
        _myTextField.backgroundColor = [UIColor greenColor];
        
        [self.view addSubview:_myTextField];
    }
    return _myTextField;
}

#pragma mark -------------关于消息的发送--------------
/**发送点击事件实现*/
- (void)sendAction {
    __weak typeof(self) weakSelf = self;
    self.myTextField.sendAction = ^(NSString *message){
        NSLog(@"%@",message);
        /**将需要发送的信息添加到数据源*/
        [weakSelf.dataSource addObject:message];
        /**刷新数据源*/
        [weakSelf.tableView reloadData];
        
        /**实例化消息体并发送*/
        [weakSelf sendMessage:message];
    };
}

/**实例化消息体并发送*/
- (void)sendMessage:(NSString *)message {
    //1 封装消息内容
    EMChatText * text = [[EMChatText alloc] initWithText:message];
    
    //2 封装消息体
    EMTextMessageBody * body = [[EMTextMessageBody alloc] initWithChatObject:text];
    
    //3 构造消息
    //第一个参数为消息的接收者
    //第二个参数为消息体，是数组，但只能有一个消息体
    EMMessage * messages = [[EMMessage alloc] initWithReceiver:self.friendId bodies:@[body]];
        
    messages.messageType = eMessageTypeChat; // 设置为单聊消息
    
    //4 发送消息
    EMError * error;
    [[EaseMob sharedInstance].chatManager sendMessage:messages progress:nil error:&error];
    if (error) {
        NSLog(@"%@",error);
    }
}


@end
